searchldap.ldap.initialContextProvider=com.sun.jndi.ldap.LdapCtxFactory
searchldap.ldap.connectionUrl=ldap://wsso-aa-dev.apps.mdp/
searchldap.ldap.connectionName=
searchldap.ldap.connectionPassword=
searchldap.ldap.userBase=OU=Utilisateurs,o=Mairie de Paris
searchldap.ldap.userSearch.guid=(mdpwssoGUID={0})
searchldap.ldap.userSubtree=true
searchldap.ldap.dn.attributeName.guid=mdpwssoGUID
searchldap.ldap.dn.attributeName.email=mail

#list of additional attributes to get for lutece users (comma separated)
searchldap.ldap.dn.attributeName.list=family,given
# For each attributes of the list, specify the LDAP attribute and the name of the attribute of the Lutece User
# searchldap.ldap.dn.attributeName.<attribute name>=<LDAP attribute>
# searchldap.luteceuser.attribute.<attribute name>=<LuteceUser attribute name>
searchldap.ldap.dn.attributeName.family=sn
searchldap.ldap.dn.attributeName.given=givenName

searchldap.luteceuser.attribute.family=user.name.family
searchldap.luteceuser.attribute.given=user.name.given
searchldap.luteceuser.attribute.email=user.business-info.online.email

# Regular expression of ldap guid. Leave empty to avoid guid check before searching the ldap for the user
searchldap.guid.regularexpression=^([a-zA-Z0-9]){40,40}$

# Indicates whether users that was not found in the LDAP should be stored in cache to avoid future search that will return no result
# Value must be true or false. Any other value will be assumed as false
searchldap.cache.storeUsersNotFoundInCache=true
